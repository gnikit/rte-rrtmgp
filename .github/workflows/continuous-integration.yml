name: Continuous Integration
on:
  push:
    branches:
    - main
    - develop
  pull_request:
    branches-ignore:
    - documentation
  workflow_dispatch:

defaults:
  run:
    # Enable Conda environment by using the login shell:
    shell: bash -leo pipefail {0}

jobs:
  CI:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        fortran-compiler: [gfortran-11]
        fpmodel: [DP, SP]
    env:
      # Core variables:
      FC: ${{ matrix.fortran-compiler }}
      FCFLAGS: "-ffree-line-length-none -m64 -std=f2008 -march=native -fbounds-check -fmodule-private -fimplicit-none -finit-real=nan -g -DRTE_USE_CBOOL -DRTE_USE_${{ matrix.fpmodel }}"
      # Make variables:
      FCINCLUDE: -I $CONDA_PREFIX/include
      RRTMGP_ROOT: ${{ github.workspace }}
      RRTMGP_DATA: ${{ github.workspace }}/rrtmgp-data
      RUN_CMD:
      FAILURE_THRESHOLD: 7.e-4
    steps:
    #
    # Relax failure thresholds for single precision
    #
    - name: Relax failure threshold for single precision
      if: matrix.fpmodel == 'SP'
      run: echo "FAILURE_THRESHOLD=3.5e-1" >> $GITHUB_ENV
    #
    # Check out repository under $GITHUB_WORKSPACE
    #
    - name: Check out code
      uses: actions/checkout@v4
    #
    # Check out data
    #
    - name: Check out data
      uses: actions/checkout@v4
      with:
        repository: earth-system-radiation/rrtmgp-data
        path: rrtmgp-data
        ref: v1.8.1

    - name: List Include paths of GFortran
      run: |
        echo | $FC -E -Wp,-v -

    #
    # Cache Conda packages
    #
    - name: Cache Conda packages
      uses: actions/cache@v4
      with:
        path: ~/conda_pkgs_dir
        key: conda-pkgs
    #
    # Set up Conda
    #
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        environment-file: environment-ci.yml
        activate-environment: rte_rrtmgp_ci
        auto-activate-base: false
        # Use the cache properly:
        use-only-tar-bz2: true
    #
    # Build libraries, examples and tests
    #
    - name: Build libraries
      run: |
        $FC --version
        make -j4 libs
    #
    # Run examples and tests
    #
    - name: Build and run examples and tests
      run: |
        echo "@@@@@@@@@@@@@@@: " $FCINCLUDE
        make -j4 tests
      env:
        FCINCLUDE: -I ${CONDA_PREFIX}/include
        LDFLAGS: -L ${CONDA_PREFIX}/lib

    #
    # Compare the results
    #
    - name: Compare the results
      run: make -j4 check
